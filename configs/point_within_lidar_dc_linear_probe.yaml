tag: 'dc_clear_60_linear_probe'
resume: false
linear_probe: true
num_workers: 8

log2tb: true
log2wb: true

test_freq: 1 # save chkp after every <freq> epochs, resume will load the last saved chkp
print_freq: 10 # print progress after processing every <freq> iters or batches
ckpt_save_interval: 10

WANDB:
  ENABLED: True
  PROJECT: DepthContrast_dense
  ENTITY: trailab
  SUMMARY_HIGHEST_METRIC: None
  
dataset:
  DATASET_NAMES: [DenseDataset]
  INFO_PATHS: 
    train: ['dense_infos_train_clear_60.pkl']
    val: ['dense_infos_val_clear_15.pkl']
  BATCHSIZE_PER_REPLICA: 8
  LABEL_TYPE: objects #sample_index, objects, class_names
  DATA_TYPE: points
  SENSOR_TYPE: 'hdl64'
  SIGNAL_TYPE: 'strongest'
  Lidar: True
  VOX: False
  POINT_TRANSFORMS:
    # - name: randomcuboidLidar
    #   crop: 0.5
    #   npoints: 10000
    #   randcrop: 1.0
    #   aspect: 0.75
    # - name: randomdrop
    #   crop: 0.2
    # - name: RandomFlipLidar
    # - name: RandomRotateLidar
    # - name: RandomScaleLidar
    - name: ToTensorLidar
  COLLATE_FUNCTION: "point_moco_collator"
  INPUT_KEY_NAMES: ["points"]
  DROP_LAST: True

optimizer:
  name: "sgd"
  weight_decay: 0.0001
  momentum: 0.9
  nesterov: False
  num_epochs: 8
  lr:
    name: "cosine"
    base_lr: 0.12
    final_lr: 0.00012

model:
  name: "PointnetMSG_DepthContrast"
  model_dir: "checkpoints/pointnetMSG_within_format_DepthContrast"
  model_input: ["points"]
  model_feature: [["fp2"]]
  Lidar: True
  VOX: False
  arch_point: "pointnet_msg_depthcontrast"
  linear_probe_dim: [128, 2] #[128, 5]
  args_point:
    use_mlp: True
    mlp_dim: [128, 128, 128]

loss:
  name: "FocalLoss"
  args:
    num_classes: 1 #4 #num_classes does not include background class
    alpha: None #[0.6, 0.1, 0.1, 0.1, 0.1] if None, then class weights are calc as 1/class_freq
    gamma: 2
    reduction: 'mean'
    ignore_index: -100 # don't ignore any class
