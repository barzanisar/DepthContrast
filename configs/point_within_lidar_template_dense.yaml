tag: 'clear_60'
resume: true
test_only: false
num_workers: 8

required_devices: 1
no_test: false
debug: false
log2tb: true
log2wb: true
allow_double_bs: false
seed: 0
distributed: false
test_freq: 1 # save chkp after every <freq> epochs, resume will load the last saved chkp
print_freq: 10 # print progress after processing every <freq> iters or batches

WANDB:
  ENABLED: True
  PROJECT: DepthContrast_dense
  ENTITY: trailab
  SUMMARY_HIGHEST_METRIC: None

dataset:
  DATASET_NAMES: [dense]
  DATA_PATHS: ['data/dense/ImageSets/train_clear_60.npy']
  BATCHSIZE_PER_REPLICA: 8
  LABEL_TYPE: sample_index
  DATA_TYPE: points
  Lidar: True
  VOX: False
  POINT_TRANSFORMS:
    - name: randomcuboidLidar
      crop: 0.5
      npoints: 10000
      randcrop: 1.0
      aspect: 0.75
    - name: randomdrop
      crop: 0.2
    - name: RandomFlipLidar
    - name: RandomRotateLidar
    - name: RandomScaleLidar
    - name: ToTensorLidar
  COLLATE_FUNCTION: "point_moco_collator"
  INPUT_KEY_NAMES: ["points", "points_moco"]
  DROP_LAST: True

optimizer:
  name: "sgd"
  weight_decay: 0.0001
  momentum: 0.9
  nesterov: False
  num_epochs: 200
  lr:
    name: "cosine"
    base_lr: 0.12
    final_lr: 0.00012

model:
  name: "PointnetMSG"
  model_dir: "checkpoints/pointnetMSG_within_format"
  model_input: ["points", "points_moco"]
  model_feature: [["fp2"], ["fp2"]]
  Lidar: True
  VOX: False
  arch_point: "pointnet_msg"
  args_point:
    use_mlp: True
    mlp_dim: [128, 128, 128]

loss:
  name: "NCELossMoco"
  args:
    two_domain: True
    LOSS_TYPE: NPID
    OTHER_INPUT: False
    within_format_weight0: 1.0
    within_format_weight1: 0.0
    across_format_weight0: 0.0
    across_format_weight1: 0.0
    NCE_LOSS:
      NORM_EMBEDDING: True
      TEMPERATURE: 0.1
      LOSS_TYPE: cross_entropy
      NUM_NEGATIVES: 65536 # has to be divisble by batch size or num voxels in each point cloud
      EMBEDDING_DIM: 128
