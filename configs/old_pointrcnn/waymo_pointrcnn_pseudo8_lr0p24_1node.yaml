# python -m torch.distributed.launch --nproc_per_node=1 tools/main_dist.py --launcher pytorch --multiprocessing-distributed --cfg configs/waymo.yaml
# python tools/main_dist.py --cfg configs/waymo.yaml
wb_extra_tags: ['pointrcnn', 'waymo', 'pretrain_object_detection']
resume: true
num_workers: 4 # should be same as (16 --cpus-per-task i.e. per node)/(4 gpus per node)

log2tb: false
log2wb: true

test_freq: 1 #save chkp after every <freq> epochs, resume will load the last saved chkp
print_freq: 1 #print progress after processing every <freq> iters or batches
ckpt_save_interval: 1 #save only models to finetune for object detection
save_ckpt_after_epochs: 0

WANDB:
  ENABLED: True 
  PROJECT: SSL3dObject
  ENTITY: trailab
  SUMMARY_HIGHEST_METRIC: None
  dir: '/DepthContrast/output'

dataset:
  DATASET_NAMES: [WaymoDataset]
  PROCESSED_DATA_TAG: 'waymo_processed_data_v_1_2_0' #single return, but waymo_short has second return as well
  DATA_SPLIT: {'train': train}
  DATA_PATH: 'data/waymo'
  FRAME_SAMPLING_INTERVAL: {'train': 20} # 1/4th of waymo pick every 10th frame to pretrain on so 10% waymo, if it is 2 then it is (1/2)=50% waymo
  BATCHSIZE_PER_REPLICA: 6
  POINT_CLOUD_RANGE:  [  0. , -75. ,  -3. ,  75. ,  75. ,   3. ] #[-75.2, -75.2, -2, 75.2, 75.2, 4]
  CLASS_NAMES: ['Vehicle', 'Pedestrian', 'Cyclist', 'OtherSmall', 'OtherMedium', 'OtherLong', 'OtherLonger', 'OtherBig'] #['Vehicle', 'Pedestrian', 'Cyclist']
  MEAN_SIZES: [[4.7, 2.1, 1.7],
                [0.91, 0.86, 1.73],
                [1.78, 0.84, 1.78],
                [0.5, 0.5, 1.0],
                [3, 2, 1.5],
                [10, 2.5, 1.7],
                [20, 2.5, 1.7],
                [20, 20, 1.7]]

  POINT_TRANSFORMS: # comment all except ToTensorLidar for linear probe
    - NAME: random_world_flip
      ALONG_AXIS_LIST: ['x', 'y']
    - NAME: random_world_rotation
      WORLD_ROT_ANGLE: [-0.78539816, 0.78539816] #-45deg, + 45deg
    - NAME: random_world_scaling
      WORLD_SCALE_RANGE: [0.95, 1.05]
    - NAME: random_local_translation
      LOCAL_TRANSLATION_RANGE: [-0.3, 0.3]
      ALONG_AXIS_LIST: ['x', 'y']
    - NAME: random_local_rotation
      LOCAL_ROT_ANGLE: [-0.78539816, 0.78539816]
    - NAME: random_local_scaling
      LOCAL_SCALE_RANGE: [0.95, 1.05]

    # - NAME: random_cuboid_lidar
    #   npoints: 10000
    # - NAME: random_drop

  SAMPLE_NUM_POINTS: 20000
  INPUT: points
  
  COLLATE_FUNCTION: "moco_collator"
  DROP_LAST: True

optimizer:
  name: "sgd"
  weight_decay: 0.0001
  momentum: 0.9
  nesterov: True
  num_epochs: 10
  lr:
    name: "cosine"
    base_lr: 0.24 #0.1 for linear_probe #0.12

model:
  model_dir: "checkpoints/pointrcnn"
  name: "pointrcnn_pretrain_pseudo_8_lr0p24_1node" #pseudo classes 8
  VOX: False

  MODEL_BASE:
    NAME: PointRCNN

    BACKBONE_3D:
      NAME: PointNet2MSG
      SA_CONFIG:
        NPOINTS: [4096, 1024, 256, 64]
        RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
        NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
        MLPS: [[[16, 16, 32], [32, 32, 64]],
                [[64, 64, 128], [64, 96, 128]],
                [[128, 196, 256], [128, 196, 256]],
                [[256, 256, 512], [256, 384, 512]]]
      FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]

    PRETEXT_HEAD: 
      NAME: SegHead
      use_mlp: True
      mlp_dim: [128, 128, 128]

  MODEL_DET_HEAD:
    NAME: PointRCNN

    INPUT_MOCO_FEATS: True

    POINT_HEAD:
      NAME: PointHeadBox
      CLS_FC: [256, 256]
      REG_FC: [256, 256]
      CLASS_AGNOSTIC: False
      USE_POINT_FEATURES_BEFORE_FUSION: False
      TARGET_CONFIG:
        GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
        BOX_CODER: PointResidualCoder
        BOX_CODER_CONFIG: {
            'use_mean_size': True,
            'mean_size': [
                [4.7, 2.1, 1.7],
                [0.91, 0.86, 1.73],
                [1.78, 0.84, 1.78],
                [0.5, 0.5, 1.0],
                [3, 2, 1.5],
                [10, 2.5, 1.7],
                [20, 2.5, 1.7],
                [20, 20, 1.7]
            ]
          }

      LOSS_CONFIG:
        LOSS_REG: WeightedSmoothL1Loss
        LOSS_WEIGHTS: {
            'point_cls_weight': 1.0,
            'point_box_weight': 1.0,
            'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
            'class_wise_cls_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5], 
            'class_wise_reg_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.0, 0.0]
        }
    
    ROI_HEAD:
      NAME: PointRCNNHead
      num_point_features: 128
      CLASS_AGNOSTIC: True

      ROI_POINT_POOL:
          POOL_EXTRA_WIDTH: [0.0, 0.0, 0.0]
          NUM_SAMPLED_POINTS: 512
          DEPTH_NORMALIZER: 70.0

      XYZ_UP_LAYER: [128, 128]
      CLS_FC: [256, 256]
      REG_FC: [256, 256]
      DP_RATIO: 0.0
      USE_BN: False

      SA_CONFIG:
          NPOINTS: [128, 32, -1]
          RADIUS: [0.2, 0.4, 100]
          NSAMPLE: [16, 16, 16]
          MLPS: [[128, 128, 128],
                  [128, 128, 256],
                  [256, 256, 512]]

      NMS_CONFIG:
          TRAIN:
              NMS_TYPE: nms_gpu
              MULTI_CLASSES_NMS: False
              NMS_PRE_MAXSIZE: 9000
              NMS_POST_MAXSIZE: 512
              NMS_THRESH: 0.8
          TEST:
              NMS_TYPE: nms_gpu
              MULTI_CLASSES_NMS: False
              NMS_PRE_MAXSIZE: 9000
              NMS_POST_MAXSIZE: 100
              NMS_THRESH: 0.85

      TARGET_CONFIG:
          BOX_CODER: ResidualCoder
          ROI_PER_IMAGE: 128
          FG_RATIO: 0.5

          SAMPLE_ROI_BY_EACH_CLASS: True
          CLS_SCORE_TYPE: cls

          CLS_FG_THRESH: 0.6
          CLS_BG_THRESH: 0.45
          CLS_BG_THRESH_LO: 0.1
          HARD_BG_RATIO: 0.8

          REG_FG_THRESH: 0.55

      LOSS_CONFIG:
          CLS_LOSS: BinaryCrossEntropy
          REG_LOSS: smooth-l1
          CORNER_LOSS_REGULARIZATION: True
          LOSS_WEIGHTS: {
              'rcnn_cls_weight': 1.0,
              'rcnn_reg_weight': 1.0,
              'rcnn_corner_weight': 1.0,
              'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
          }
    
  # MODEL_AUX_HEAD:
  #   NAME: PointRCNN
    
  #   PRETEXT_HEAD: 
  #     NAME: RegHead
  #     REG_FC: [256, 256]
  #     # - NAME: ScaleRegHead
  #     #   REG_FC: [256, 256]
  #     LOSS_CONFIG:
  #       LOSS_REG: WeightedSmoothL1Loss
  #       LOSS_WEIGHTS: {
  #           'seg_reg_weight': 1.0,
  #           'code_weights': [1.0, 1.0, 1.0]
  #       }

NCE_LOSS:
  LOSS_WEIGHT: 1.0
  TEMPERATURE: 0.1
  NUM_NEGATIVES: 65536
  EMBEDDING_DIM: 128
  IOU_WEIGHT: 1.0