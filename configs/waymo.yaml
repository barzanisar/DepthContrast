wb_extra_tags: ['pointnet', 'waymo']
resume: false
linear_probe: false # True for linear probe
# cluster: False
num_workers: 0

log2tb: false
log2wb: false

test_freq: 1 #save chkp after every <freq> epochs, resume will load the last saved chkp
print_freq: 1 #print progress after processing every <freq> iters or batches
ckpt_save_interval: 10
save_ckpt_after_epochs: 0

WANDB:
  ENABLED: True 
  PROJECT: DepthContrast_dense
  ENTITY: trailab
  SUMMARY_HIGHEST_METRIC: None
  dir: '/DepthContrast/output'

dataset:
  DATASET_NAMES: [WaymoDataset]
  DATA_PATH: 'data/waymo'
  multiply_i_by_255: True
  BATCHSIZE_PER_REPLICA: 8 #Change to 14
  POINT_CLOUD_RANGE:  [  0. , -75. ,  -3. ,  75. ,  75. ,   3. ] #[-75.2, -75.2, -2, 75.2, 75.2, 4]
  CLASS_NAMES: ['Vehicle', 'Pedestrian', 'Cyclist']
  LABEL_TYPE: objects #sample_index, objects, class_names
  DATA_TYPE: points
  Lidar: True
  FOV_POINTS_ONLY: True
  GT_SAMPLING:
    USE_ROAD_PLANE: False
    db_info_path: ['pcdet_waymo_dbinfos_train_sampled_1.pkl']
    filter_by_min_points: ['Vehicle:5', 'Pedestrian:5', 'Cyclist:5']
    sample_groups: ['Vehicle:15', 'Pedestrian:10', 'Cyclist:10']
    NUM_POINT_FEATURES: 5 # for gt db objects xyzi,elong
    remove_extra_width: [0.0, 0.0, 0.0]
    LIMIT_WHOLE_SCENE: True

  POINT_TRANSFORMS: # comment all except ToTensorLidar for linear probe
    - NAME: random_world_flip
      ALONG_AXIS_LIST: ['x', 'y']
    - NAME: random_world_rotation
      WORLD_ROT_ANGLE: [-0.78539816, 0.78539816] #-45deg, + 45deg
    - NAME: random_world_scaling
      WORLD_SCALE_RANGE: [0.95, 1.05]
    # - NAME: random_cuboid_lidar
    #   npoints: 10000
    # - NAME: random_drop

  SAMPLE_NUM_POINTS: 20000
  
  VOX: False

  COLLATE_FUNCTION: "point_moco_collator"
  DROP_LAST: True

optimizer:
  name: "sgd"
  weight_decay: 0.0001
  momentum: 0.9
  nesterov: True
  num_epochs: 401
  lr:
    name: "cosine"
    base_lr: 0.01 #0.1 for linear_probe #0.12

model:
  name: "pretrain_on_gt_boxes"
  model_dir: "checkpoints/pointnet/waymo"
  model_input: ["points", "points_moco"]
  Lidar: True
  VOX: False
  linear_probe_dim: [128, 2]

  MODEL_MOCO:
    NAME: PointRCNN
    BACKBONE_3D:
      NAME: PointNet2MSG
      SA_CONFIG:
        NPOINTS: [4096, 1024, 256, 64]
        RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
        NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
        MLPS: [[[16, 16, 32], [32, 32, 64]],
              [[64, 64, 128], [64, 96, 128]],
              [[128, 196, 256], [128, 196, 256]],
              [[256, 256, 512], [256, 384, 512]]]
      FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]

    PRETEXT_HEAD: 
      NAME: SegHead
      use_mlp: True
      mlp_dim: [128, 128, 128]

  MODEL:
    NAME: PointRCNN

    BACKBONE_3D:
      NAME: PointNet2MSG
      SA_CONFIG:
        NPOINTS: [4096, 1024, 256, 64]
        RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
        NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
        MLPS: [[[16, 16, 32], [32, 32, 64]],
                [[64, 64, 128], [64, 96, 128]],
                [[128, 196, 256], [128, 196, 256]],
                [[256, 256, 512], [256, 384, 512]]]
      FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]

    PRETEXT_HEAD: 
      NAME: SegHead
      use_mlp: True
      mlp_dim: [128, 128, 128]

    POINT_HEAD:
      NAME: PointHeadBox
      CLS_FC: [256, 256]
      REG_FC: [256, 256]
      CLASS_AGNOSTIC: True
      USE_POINT_FEATURES_BEFORE_FUSION: False
      TARGET_CONFIG:
        GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
        BOX_CODER: PointResidualCoder
        BOX_CODER_CONFIG: {
            'use_mean_size': True,
            'mean_size': [
                [4.7, 2.1, 1.7],
                [0.91, 0.86, 1.73],
                [1.78, 0.84, 1.78]
            ]
          }

      LOSS_CONFIG:
        LOSS_REG: WeightedSmoothL1Loss
        LOSS_WEIGHTS: {
            'point_cls_weight': 1.0,
            'point_box_weight': 1.0,
            'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }

    ROI_HEAD:
      NAME: PointRCNNHead
      CLASS_AGNOSTIC: True

      ROI_POINT_POOL:
          POOL_EXTRA_WIDTH: [0.0, 0.0, 0.0]
          NUM_SAMPLED_POINTS: 512
          DEPTH_NORMALIZER: 70.0

      XYZ_UP_LAYER: [128, 128]
      CLS_FC: [256, 256]
      REG_FC: [256, 256]
      DP_RATIO: 0.0
      USE_BN: False

      SA_CONFIG:
        NPOINTS: [128, 32, -1]
        RADIUS: [0.2, 0.4, 100]
        NSAMPLE: [16, 16, 16]
        MLPS: [[128, 128, 128],
                [128, 128, 256],
                [256, 256, 512]]

      NMS_CONFIG:
        TRAIN:
          NMS_TYPE: nms_gpu
          MULTI_CLASSES_NMS: False
          NMS_PRE_MAXSIZE: 9000
          NMS_POST_MAXSIZE: 512
          NMS_THRESH: 0.8
        TEST:
          NMS_TYPE: nms_gpu
          MULTI_CLASSES_NMS: False
          NMS_PRE_MAXSIZE: 9000
          NMS_POST_MAXSIZE: 100
          NMS_THRESH: 0.85

      TARGET_CONFIG:
        BOX_CODER: ResidualCoder
        ROI_PER_IMAGE: 128
        FG_RATIO: 0.5

        SAMPLE_ROI_BY_EACH_CLASS: True
        CLS_SCORE_TYPE: cls

        CLS_FG_THRESH: 0.6
        CLS_BG_THRESH: 0.45
        CLS_BG_THRESH_LO: 0.1
        HARD_BG_RATIO: 0.8

        REG_FG_THRESH: 0.55

      LOSS_CONFIG:
        CLS_LOSS: BinaryCrossEntropy
        REG_LOSS: smooth-l1
        CORNER_LOSS_REGULARIZATION: True
        LOSS_WEIGHTS: {
            'rcnn_cls_weight': 1.0,
            'rcnn_reg_weight': 1.0,
            'rcnn_corner_weight': 1.0,
            'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }

    # POST_PROCESSING:
    #   RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
    #   SCORE_THRESH: 0.1
    #   OUTPUT_RAW_SCORE: False

    #   EVAL_METRIC: kitti

    #   NMS_CONFIG:
    #       MULTI_CLASSES_NMS: False
    #       NMS_TYPE: nms_gpu
    #       NMS_THRESH: 0.1
    #       NMS_PRE_MAXSIZE: 4096
    #       NMS_POST_MAXSIZE: 500

  # arch_point: "pointnet_msg"
  # args_point:
  #   use_mlp: True
  #   mlp_dim: [128, 128, 128]

loss:
  args:
    TEMPERATURE: 0.1
    NUM_NEGATIVES: 65536 #Waymo:65536, Dense_train_all_60+Kitti_trainvaltest: 21995, Dense_train_all_60: 7195 # has to be divisble by batch size or num voxels in each point cloud
    EMBEDDING_DIM: 128