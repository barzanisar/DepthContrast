# python -m torch.distributed.launch --nproc_per_node=1 tools/main_dist.py --launcher pytorch --multiprocessing-distributed --cfg configs/waymo.yaml
# python tools/main_dist.py --cfg configs/waymo.yaml
wb_extra_tags: ['pointnet', 'waymo']
resume: false
linear_probe: false # True for linear probe
num_workers: 4 # should be same as --cpus-per-task/gpus per node

log2tb: false
log2wb: false

test_freq: 1 #save chkp after every <freq> epochs, resume will load the last saved chkp
print_freq: 1 #print progress after processing every <freq> iters or batches
ckpt_save_interval: 1 #save only models to finetune for object detection
save_ckpt_after_epochs: 0

WANDB:
  ENABLED: False 
  PROJECT: DepthContrast_waymo
  ENTITY: trailab
  SUMMARY_HIGHEST_METRIC: None
  dir: '/DepthContrast/output'

dataset:
  DATASET_NAMES: [WaymoDataset]
  PROCESSED_DATA_TAG: 'waymo_processed_data_10' #single return, but waymo_short has second return as well
  DATA_SPLIT: {'train': train_short}
  DATA_PATH: 'data/waymo'
  multiply_i_by_255: True
  BATCHSIZE_PER_REPLICA: 6 #Change to 14, if input moco feats is false, use 8
  POINT_CLOUD_RANGE:  [  0. , -75. ,  -3. ,  75. ,  75. ,   3. ] #[-75.2, -75.2, -2, 75.2, 75.2, 4]
  CLASS_NAMES: ['Vehicle', 'Pedestrian', 'Cyclist', 'OtherSmall', 'OtherMedium', 'OtherLong', 'OtherLonger', 'OtherBig'] #['Vehicle', 'Pedestrian', 'Cyclist']
  MEAN_SIZES: [[4.7, 2.1, 1.7],
                [0.91, 0.86, 1.73],
                [1.78, 0.84, 1.78],
                [0.5, 0.5, 1.0],
                [3, 2, 1.5],
                [10, 2.5, 1.7],
                [20, 2.5, 1.7],
                [20, 20, 1.7]]
  LABEL_TYPE: objects #sample_index, objects, class_names
  DATA_TYPE: points
  Lidar: True
  FOV_POINTS_ONLY: True
  # GT_SAMPLING:
  #   USE_ROAD_PLANE: False
  #   db_info_path: ['waymo_processed_data_10_short_waymo_dbinfos_train_sampled_1.pkl']
  #   filter_by_min_points: ['Object:5'] #['Vehicle:5', 'Pedestrian:5', 'Cyclist:5']
  #   sample_groups: ['Object:35'] #['Vehicle:15', 'Pedestrian:10', 'Cyclist:10']
  #   NUM_POINT_FEATURES: 5 # for gt db objects xyzi,elong
  #   remove_extra_width: [0.0, 0.0, 0.0]
  #   LIMIT_WHOLE_SCENE: True

  POINT_TRANSFORMS: # comment all except ToTensorLidar for linear probe
    - NAME: random_world_flip
      ALONG_AXIS_LIST: ['x', 'y']
    - NAME: random_world_rotation
      WORLD_ROT_ANGLE: [-0.78539816, 0.78539816] #-45deg, + 45deg
    - NAME: random_world_scaling
      WORLD_SCALE_RANGE: [0.95, 1.05]
    - NAME: random_local_translation
      LOCAL_TRANSLATION_RANGE: [-0.3, 0.3]
      ALONG_AXIS_LIST: ['x', 'y']
    - NAME: random_local_rotation
      LOCAL_ROT_ANGLE: [-0.78539816, 0.78539816]
    - NAME: random_local_scaling
      LOCAL_SCALE_RANGE: [0.95, 1.05]

    # - NAME: random_cuboid_lidar
    #   npoints: 10000
    # - NAME: random_drop

  SAMPLE_NUM_POINTS: 20000
  
  VOX: False

  COLLATE_FUNCTION: "moco_collator"
  DROP_LAST: True

optimizer:
  name: "sgd"
  weight_decay: 0.0001
  momentum: 0.9
  nesterov: True
  num_epochs: 16
  lr:
    name: "cosine"
    base_lr: 0.01 #0.1 for linear_probe #0.12

model:
  name: "pretrain_on_waymo_short_clustered"
  model_dir: "checkpoints/pointnet/waymo"
  model_input: ["points", "points_moco"]
  Lidar: True
  VOX: False
  linear_probe_dim: [128, 2]

  MODEL_BASE:
    NAME: PointRCNN

    BACKBONE_3D:
      NAME: PointNet2MSG
      SA_CONFIG:
        NPOINTS: [4096, 1024, 256, 64]
        RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
        NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
        MLPS: [[[16, 16, 32], [32, 32, 64]],
                [[64, 64, 128], [64, 96, 128]],
                [[128, 196, 256], [128, 196, 256]],
                [[256, 256, 512], [256, 384, 512]]]
      FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]

    PRETEXT_HEAD: 
      NAME: SegHead
      use_mlp: True
      mlp_dim: [128, 128, 128]

  MODEL_DET_HEAD:
    NAME: PointRCNN

    INPUT_MOCO_FEATS: True

    POINT_HEAD:
      NAME: PointHeadBox
      CLS_FC: [256, 256]
      REG_FC: [256, 256]
      CLASS_AGNOSTIC: False
      USE_POINT_FEATURES_BEFORE_FUSION: False
      TARGET_CONFIG:
        GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
        BOX_CODER: PointResidualCoder
        BOX_CODER_CONFIG: {
            'use_mean_size': True,
            'mean_size': [
                [4.7, 2.1, 1.7],
                [0.91, 0.86, 1.73],
                [1.78, 0.84, 1.78],
                [0.5, 0.5, 1.0],
                [3, 2, 1.5],
                [10, 2.5, 1.7],
                [20, 2.5, 1.7],
                [20, 20, 1.7]
            ]
          }

      LOSS_CONFIG:
        LOSS_REG: WeightedSmoothL1Loss
        LOSS_WEIGHTS: {
            'point_cls_weight': 1.0,
            'point_box_weight': 1.0,
            'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
            'class_wise_cls_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5],
            'class_wise_reg_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.0, 0.0]
        }
    
  MODEL_AUX_HEAD:
    NAME: PointRCNN
    
    PRETEXT_HEAD: 
      NAME: RegHead
      REG_FC: [256, 256]
      # - NAME: ScaleRegHead
      #   REG_FC: [256, 256]
      LOSS_CONFIG:
        LOSS_REG: WeightedSmoothL1Loss
        LOSS_WEIGHTS: {
            'seg_reg_weight': 1.0,
            'code_weights': [1.0, 1.0]
        }

loss:
  args:
    TEMPERATURE: 0.1
    NUM_NEGATIVES: 65536 #Waymo:65536, Dense_train_all_60+Kitti_trainvaltest: 21995, Dense_train_all_60: 7195 # has to be divisble by batch size or num voxels in each point cloud
    EMBEDDING_DIM: 128